// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type AgentRuntimeEndpointStatus string

// Enum values for AgentRuntimeEndpointStatus
const (
	AgentRuntimeEndpointStatusCreating     AgentRuntimeEndpointStatus = "CREATING"
	AgentRuntimeEndpointStatusCreateFailed AgentRuntimeEndpointStatus = "CREATE_FAILED"
	AgentRuntimeEndpointStatusUpdating     AgentRuntimeEndpointStatus = "UPDATING"
	AgentRuntimeEndpointStatusUpdateFailed AgentRuntimeEndpointStatus = "UPDATE_FAILED"
	AgentRuntimeEndpointStatusReady        AgentRuntimeEndpointStatus = "READY"
	AgentRuntimeEndpointStatusDeleting     AgentRuntimeEndpointStatus = "DELETING"
)

// Values returns all known values for AgentRuntimeEndpointStatus. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgentRuntimeEndpointStatus) Values() []AgentRuntimeEndpointStatus {
	return []AgentRuntimeEndpointStatus{
		"CREATING",
		"CREATE_FAILED",
		"UPDATING",
		"UPDATE_FAILED",
		"READY",
		"DELETING",
	}
}

type AgentRuntimeStatus string

// Enum values for AgentRuntimeStatus
const (
	AgentRuntimeStatusCreating     AgentRuntimeStatus = "CREATING"
	AgentRuntimeStatusCreateFailed AgentRuntimeStatus = "CREATE_FAILED"
	AgentRuntimeStatusUpdating     AgentRuntimeStatus = "UPDATING"
	AgentRuntimeStatusUpdateFailed AgentRuntimeStatus = "UPDATE_FAILED"
	AgentRuntimeStatusReady        AgentRuntimeStatus = "READY"
	AgentRuntimeStatusDeleting     AgentRuntimeStatus = "DELETING"
)

// Values returns all known values for AgentRuntimeStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AgentRuntimeStatus) Values() []AgentRuntimeStatus {
	return []AgentRuntimeStatus{
		"CREATING",
		"CREATE_FAILED",
		"UPDATING",
		"UPDATE_FAILED",
		"READY",
		"DELETING",
	}
}

type ApiKeyCredentialLocation string

// Enum values for ApiKeyCredentialLocation
const (
	ApiKeyCredentialLocationHeader         ApiKeyCredentialLocation = "HEADER"
	ApiKeyCredentialLocationQueryParameter ApiKeyCredentialLocation = "QUERY_PARAMETER"
)

// Values returns all known values for ApiKeyCredentialLocation. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ApiKeyCredentialLocation) Values() []ApiKeyCredentialLocation {
	return []ApiKeyCredentialLocation{
		"HEADER",
		"QUERY_PARAMETER",
	}
}

type AuthorizerType string

// Enum values for AuthorizerType
const (
	AuthorizerTypeCustomJwt AuthorizerType = "CUSTOM_JWT"
)

// Values returns all known values for AuthorizerType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthorizerType) Values() []AuthorizerType {
	return []AuthorizerType{
		"CUSTOM_JWT",
	}
}

type BrowserNetworkMode string

// Enum values for BrowserNetworkMode
const (
	BrowserNetworkModePublic BrowserNetworkMode = "PUBLIC"
	BrowserNetworkModeVpc    BrowserNetworkMode = "VPC"
)

// Values returns all known values for BrowserNetworkMode. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BrowserNetworkMode) Values() []BrowserNetworkMode {
	return []BrowserNetworkMode{
		"PUBLIC",
		"VPC",
	}
}

type BrowserStatus string

// Enum values for BrowserStatus
const (
	BrowserStatusCreating     BrowserStatus = "CREATING"
	BrowserStatusCreateFailed BrowserStatus = "CREATE_FAILED"
	BrowserStatusReady        BrowserStatus = "READY"
	BrowserStatusDeleting     BrowserStatus = "DELETING"
	BrowserStatusDeleteFailed BrowserStatus = "DELETE_FAILED"
	BrowserStatusDeleted      BrowserStatus = "DELETED"
)

// Values returns all known values for BrowserStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (BrowserStatus) Values() []BrowserStatus {
	return []BrowserStatus{
		"CREATING",
		"CREATE_FAILED",
		"READY",
		"DELETING",
		"DELETE_FAILED",
		"DELETED",
	}
}

type CodeInterpreterNetworkMode string

// Enum values for CodeInterpreterNetworkMode
const (
	CodeInterpreterNetworkModePublic  CodeInterpreterNetworkMode = "PUBLIC"
	CodeInterpreterNetworkModeSandbox CodeInterpreterNetworkMode = "SANDBOX"
	CodeInterpreterNetworkModeVpc     CodeInterpreterNetworkMode = "VPC"
)

// Values returns all known values for CodeInterpreterNetworkMode. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodeInterpreterNetworkMode) Values() []CodeInterpreterNetworkMode {
	return []CodeInterpreterNetworkMode{
		"PUBLIC",
		"SANDBOX",
		"VPC",
	}
}

type CodeInterpreterStatus string

// Enum values for CodeInterpreterStatus
const (
	CodeInterpreterStatusCreating     CodeInterpreterStatus = "CREATING"
	CodeInterpreterStatusCreateFailed CodeInterpreterStatus = "CREATE_FAILED"
	CodeInterpreterStatusReady        CodeInterpreterStatus = "READY"
	CodeInterpreterStatusDeleting     CodeInterpreterStatus = "DELETING"
	CodeInterpreterStatusDeleteFailed CodeInterpreterStatus = "DELETE_FAILED"
	CodeInterpreterStatusDeleted      CodeInterpreterStatus = "DELETED"
)

// Values returns all known values for CodeInterpreterStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CodeInterpreterStatus) Values() []CodeInterpreterStatus {
	return []CodeInterpreterStatus{
		"CREATING",
		"CREATE_FAILED",
		"READY",
		"DELETING",
		"DELETE_FAILED",
		"DELETED",
	}
}

type CredentialProviderType string

// Enum values for CredentialProviderType
const (
	CredentialProviderTypeGatewayIamRole CredentialProviderType = "GATEWAY_IAM_ROLE"
	CredentialProviderTypeOauth          CredentialProviderType = "OAUTH"
	CredentialProviderTypeApiKey         CredentialProviderType = "API_KEY"
)

// Values returns all known values for CredentialProviderType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CredentialProviderType) Values() []CredentialProviderType {
	return []CredentialProviderType{
		"GATEWAY_IAM_ROLE",
		"OAUTH",
		"API_KEY",
	}
}

type CredentialProviderVendorType string

// Enum values for CredentialProviderVendorType
const (
	CredentialProviderVendorTypeGoogleOauth2     CredentialProviderVendorType = "GoogleOauth2"
	CredentialProviderVendorTypeGithubOauth2     CredentialProviderVendorType = "GithubOauth2"
	CredentialProviderVendorTypeSlackOauth2      CredentialProviderVendorType = "SlackOauth2"
	CredentialProviderVendorTypeSalesforceOauth2 CredentialProviderVendorType = "SalesforceOauth2"
	CredentialProviderVendorTypeMicrosoftOauth2  CredentialProviderVendorType = "MicrosoftOauth2"
	CredentialProviderVendorTypeCustomOauth2     CredentialProviderVendorType = "CustomOauth2"
)

// Values returns all known values for CredentialProviderVendorType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (CredentialProviderVendorType) Values() []CredentialProviderVendorType {
	return []CredentialProviderVendorType{
		"GoogleOauth2",
		"GithubOauth2",
		"SlackOauth2",
		"SalesforceOauth2",
		"MicrosoftOauth2",
		"CustomOauth2",
	}
}

type ExceptionLevel string

// Enum values for ExceptionLevel
const (
	ExceptionLevelDebug ExceptionLevel = "DEBUG"
)

// Values returns all known values for ExceptionLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ExceptionLevel) Values() []ExceptionLevel {
	return []ExceptionLevel{
		"DEBUG",
	}
}

type GatewayProtocolType string

// Enum values for GatewayProtocolType
const (
	GatewayProtocolTypeMcp GatewayProtocolType = "MCP"
)

// Values returns all known values for GatewayProtocolType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GatewayProtocolType) Values() []GatewayProtocolType {
	return []GatewayProtocolType{
		"MCP",
	}
}

type GatewayStatus string

// Enum values for GatewayStatus
const (
	GatewayStatusCreating           GatewayStatus = "CREATING"
	GatewayStatusUpdating           GatewayStatus = "UPDATING"
	GatewayStatusUpdateUnsuccessful GatewayStatus = "UPDATE_UNSUCCESSFUL"
	GatewayStatusDeleting           GatewayStatus = "DELETING"
	GatewayStatusReady              GatewayStatus = "READY"
	GatewayStatusFailed             GatewayStatus = "FAILED"
)

// Values returns all known values for GatewayStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (GatewayStatus) Values() []GatewayStatus {
	return []GatewayStatus{
		"CREATING",
		"UPDATING",
		"UPDATE_UNSUCCESSFUL",
		"DELETING",
		"READY",
		"FAILED",
	}
}

type KeyType string

// Enum values for KeyType
const (
	KeyTypeCustomerManagedKey KeyType = "CustomerManagedKey"
	KeyTypeServiceManagedKey  KeyType = "ServiceManagedKey"
)

// Values returns all known values for KeyType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (KeyType) Values() []KeyType {
	return []KeyType{
		"CustomerManagedKey",
		"ServiceManagedKey",
	}
}

type MemoryStatus string

// Enum values for MemoryStatus
const (
	MemoryStatusCreating MemoryStatus = "CREATING"
	MemoryStatusActive   MemoryStatus = "ACTIVE"
	MemoryStatusFailed   MemoryStatus = "FAILED"
	MemoryStatusDeleting MemoryStatus = "DELETING"
)

// Values returns all known values for MemoryStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MemoryStatus) Values() []MemoryStatus {
	return []MemoryStatus{
		"CREATING",
		"ACTIVE",
		"FAILED",
		"DELETING",
	}
}

type MemoryStrategyStatus string

// Enum values for MemoryStrategyStatus
const (
	MemoryStrategyStatusCreating MemoryStrategyStatus = "CREATING"
	MemoryStrategyStatusActive   MemoryStrategyStatus = "ACTIVE"
	MemoryStrategyStatusDeleting MemoryStrategyStatus = "DELETING"
	MemoryStrategyStatusFailed   MemoryStrategyStatus = "FAILED"
)

// Values returns all known values for MemoryStrategyStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MemoryStrategyStatus) Values() []MemoryStrategyStatus {
	return []MemoryStrategyStatus{
		"CREATING",
		"ACTIVE",
		"DELETING",
		"FAILED",
	}
}

type MemoryStrategyType string

// Enum values for MemoryStrategyType
const (
	MemoryStrategyTypeSemantic       MemoryStrategyType = "SEMANTIC"
	MemoryStrategyTypeSummarization  MemoryStrategyType = "SUMMARIZATION"
	MemoryStrategyTypeUserPreference MemoryStrategyType = "USER_PREFERENCE"
	MemoryStrategyTypeCustom         MemoryStrategyType = "CUSTOM"
)

// Values returns all known values for MemoryStrategyType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (MemoryStrategyType) Values() []MemoryStrategyType {
	return []MemoryStrategyType{
		"SEMANTIC",
		"SUMMARIZATION",
		"USER_PREFERENCE",
		"CUSTOM",
	}
}

type NetworkMode string

// Enum values for NetworkMode
const (
	NetworkModePublic NetworkMode = "PUBLIC"
	NetworkModeVpc    NetworkMode = "VPC"
)

// Values returns all known values for NetworkMode. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NetworkMode) Values() []NetworkMode {
	return []NetworkMode{
		"PUBLIC",
		"VPC",
	}
}

type OverrideType string

// Enum values for OverrideType
const (
	OverrideTypeSemanticOverride       OverrideType = "SEMANTIC_OVERRIDE"
	OverrideTypeSummaryOverride        OverrideType = "SUMMARY_OVERRIDE"
	OverrideTypeUserPreferenceOverride OverrideType = "USER_PREFERENCE_OVERRIDE"
)

// Values returns all known values for OverrideType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (OverrideType) Values() []OverrideType {
	return []OverrideType{
		"SEMANTIC_OVERRIDE",
		"SUMMARY_OVERRIDE",
		"USER_PREFERENCE_OVERRIDE",
	}
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeSystem ResourceType = "SYSTEM"
	ResourceTypeCustom ResourceType = "CUSTOM"
)

// Values returns all known values for ResourceType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ResourceType) Values() []ResourceType {
	return []ResourceType{
		"SYSTEM",
		"CUSTOM",
	}
}

type SchemaType string

// Enum values for SchemaType
const (
	SchemaTypeString  SchemaType = "string"
	SchemaTypeNumber  SchemaType = "number"
	SchemaTypeObject  SchemaType = "object"
	SchemaTypeArray   SchemaType = "array"
	SchemaTypeBoolean SchemaType = "boolean"
	SchemaTypeInteger SchemaType = "integer"
)

// Values returns all known values for SchemaType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SchemaType) Values() []SchemaType {
	return []SchemaType{
		"string",
		"number",
		"object",
		"array",
		"boolean",
		"integer",
	}
}

type SearchType string

// Enum values for SearchType
const (
	SearchTypeSemantic SearchType = "SEMANTIC"
)

// Values returns all known values for SearchType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SearchType) Values() []SearchType {
	return []SearchType{
		"SEMANTIC",
	}
}

type ServerProtocol string

// Enum values for ServerProtocol
const (
	ServerProtocolMcp  ServerProtocol = "MCP"
	ServerProtocolHttp ServerProtocol = "HTTP"
	ServerProtocolA2a  ServerProtocol = "A2A"
)

// Values returns all known values for ServerProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ServerProtocol) Values() []ServerProtocol {
	return []ServerProtocol{
		"MCP",
		"HTTP",
		"A2A",
	}
}

type TargetStatus string

// Enum values for TargetStatus
const (
	TargetStatusCreating           TargetStatus = "CREATING"
	TargetStatusUpdating           TargetStatus = "UPDATING"
	TargetStatusUpdateUnsuccessful TargetStatus = "UPDATE_UNSUCCESSFUL"
	TargetStatusDeleting           TargetStatus = "DELETING"
	TargetStatusReady              TargetStatus = "READY"
	TargetStatusFailed             TargetStatus = "FAILED"
)

// Values returns all known values for TargetStatus. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TargetStatus) Values() []TargetStatus {
	return []TargetStatus{
		"CREATING",
		"UPDATING",
		"UPDATE_UNSUCCESSFUL",
		"DELETING",
		"READY",
		"FAILED",
	}
}

type ValidationExceptionReason string

// Enum values for ValidationExceptionReason
const (
	ValidationExceptionReasonCannotParse                          ValidationExceptionReason = "CannotParse"
	ValidationExceptionReasonFieldValidationFailed                ValidationExceptionReason = "FieldValidationFailed"
	ValidationExceptionReasonIdempotentParameterMismatchException ValidationExceptionReason = "IdempotentParameterMismatchException"
	ValidationExceptionReasonRootEventInOtherSession              ValidationExceptionReason = "EventInOtherSession"
	ValidationExceptionReasonResourceConflict                     ValidationExceptionReason = "ResourceConflict"
)

// Values returns all known values for ValidationExceptionReason. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ValidationExceptionReason) Values() []ValidationExceptionReason {
	return []ValidationExceptionReason{
		"CannotParse",
		"FieldValidationFailed",
		"IdempotentParameterMismatchException",
		"EventInOtherSession",
		"ResourceConflict",
	}
}
