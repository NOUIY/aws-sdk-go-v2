// Code generated by smithy-go-codegen DO NOT EDIT.

package odb

import (
	"context"
	"fmt"
	smithy "github.com/aws/smithy-go"
	"github.com/aws/smithy-go/middleware"
)

type validateOpAcceptMarketplaceRegistration struct {
}

func (*validateOpAcceptMarketplaceRegistration) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpAcceptMarketplaceRegistration) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*AcceptMarketplaceRegistrationInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpAcceptMarketplaceRegistrationInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpCreateCloudAutonomousVmCluster struct {
}

func (*validateOpCreateCloudAutonomousVmCluster) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpCreateCloudAutonomousVmCluster) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*CreateCloudAutonomousVmClusterInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpCreateCloudAutonomousVmClusterInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpCreateCloudExadataInfrastructure struct {
}

func (*validateOpCreateCloudExadataInfrastructure) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpCreateCloudExadataInfrastructure) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*CreateCloudExadataInfrastructureInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpCreateCloudExadataInfrastructureInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpCreateCloudVmCluster struct {
}

func (*validateOpCreateCloudVmCluster) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpCreateCloudVmCluster) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*CreateCloudVmClusterInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpCreateCloudVmClusterInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpCreateOdbNetwork struct {
}

func (*validateOpCreateOdbNetwork) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpCreateOdbNetwork) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*CreateOdbNetworkInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpCreateOdbNetworkInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpCreateOdbPeeringConnection struct {
}

func (*validateOpCreateOdbPeeringConnection) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpCreateOdbPeeringConnection) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*CreateOdbPeeringConnectionInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpCreateOdbPeeringConnectionInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDeleteCloudAutonomousVmCluster struct {
}

func (*validateOpDeleteCloudAutonomousVmCluster) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDeleteCloudAutonomousVmCluster) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DeleteCloudAutonomousVmClusterInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDeleteCloudAutonomousVmClusterInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDeleteCloudExadataInfrastructure struct {
}

func (*validateOpDeleteCloudExadataInfrastructure) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDeleteCloudExadataInfrastructure) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DeleteCloudExadataInfrastructureInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDeleteCloudExadataInfrastructureInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDeleteCloudVmCluster struct {
}

func (*validateOpDeleteCloudVmCluster) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDeleteCloudVmCluster) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DeleteCloudVmClusterInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDeleteCloudVmClusterInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDeleteOdbNetwork struct {
}

func (*validateOpDeleteOdbNetwork) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDeleteOdbNetwork) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DeleteOdbNetworkInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDeleteOdbNetworkInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpDeleteOdbPeeringConnection struct {
}

func (*validateOpDeleteOdbPeeringConnection) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpDeleteOdbPeeringConnection) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*DeleteOdbPeeringConnectionInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpDeleteOdbPeeringConnectionInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetCloudAutonomousVmCluster struct {
}

func (*validateOpGetCloudAutonomousVmCluster) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetCloudAutonomousVmCluster) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetCloudAutonomousVmClusterInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetCloudAutonomousVmClusterInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetCloudExadataInfrastructure struct {
}

func (*validateOpGetCloudExadataInfrastructure) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetCloudExadataInfrastructure) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetCloudExadataInfrastructureInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetCloudExadataInfrastructureInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetCloudExadataInfrastructureUnallocatedResources struct {
}

func (*validateOpGetCloudExadataInfrastructureUnallocatedResources) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetCloudExadataInfrastructureUnallocatedResources) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetCloudExadataInfrastructureUnallocatedResourcesInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetCloudExadataInfrastructureUnallocatedResourcesInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetCloudVmCluster struct {
}

func (*validateOpGetCloudVmCluster) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetCloudVmCluster) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetCloudVmClusterInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetCloudVmClusterInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetDbNode struct {
}

func (*validateOpGetDbNode) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetDbNode) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetDbNodeInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetDbNodeInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetDbServer struct {
}

func (*validateOpGetDbServer) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetDbServer) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetDbServerInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetDbServerInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetOdbNetwork struct {
}

func (*validateOpGetOdbNetwork) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetOdbNetwork) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetOdbNetworkInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetOdbNetworkInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpGetOdbPeeringConnection struct {
}

func (*validateOpGetOdbPeeringConnection) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpGetOdbPeeringConnection) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*GetOdbPeeringConnectionInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpGetOdbPeeringConnectionInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpListAutonomousVirtualMachines struct {
}

func (*validateOpListAutonomousVirtualMachines) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpListAutonomousVirtualMachines) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*ListAutonomousVirtualMachinesInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpListAutonomousVirtualMachinesInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpListDbNodes struct {
}

func (*validateOpListDbNodes) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpListDbNodes) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*ListDbNodesInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpListDbNodesInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpListDbServers struct {
}

func (*validateOpListDbServers) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpListDbServers) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*ListDbServersInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpListDbServersInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpListSystemVersions struct {
}

func (*validateOpListSystemVersions) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpListSystemVersions) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*ListSystemVersionsInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpListSystemVersionsInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpListTagsForResource struct {
}

func (*validateOpListTagsForResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpListTagsForResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*ListTagsForResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpListTagsForResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpRebootDbNode struct {
}

func (*validateOpRebootDbNode) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpRebootDbNode) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*RebootDbNodeInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpRebootDbNodeInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpStartDbNode struct {
}

func (*validateOpStartDbNode) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpStartDbNode) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*StartDbNodeInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpStartDbNodeInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpStopDbNode struct {
}

func (*validateOpStopDbNode) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpStopDbNode) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*StopDbNodeInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpStopDbNodeInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpTagResource struct {
}

func (*validateOpTagResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpTagResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*TagResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpTagResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpUntagResource struct {
}

func (*validateOpUntagResource) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpUntagResource) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*UntagResourceInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpUntagResourceInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpUpdateCloudExadataInfrastructure struct {
}

func (*validateOpUpdateCloudExadataInfrastructure) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpUpdateCloudExadataInfrastructure) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*UpdateCloudExadataInfrastructureInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpUpdateCloudExadataInfrastructureInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpUpdateOdbNetwork struct {
}

func (*validateOpUpdateOdbNetwork) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpUpdateOdbNetwork) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*UpdateOdbNetworkInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpUpdateOdbNetworkInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

type validateOpUpdateOdbPeeringConnection struct {
}

func (*validateOpUpdateOdbPeeringConnection) ID() string {
	return "OperationInputValidation"
}

func (m *validateOpUpdateOdbPeeringConnection) HandleInitialize(ctx context.Context, in middleware.InitializeInput, next middleware.InitializeHandler) (
	out middleware.InitializeOutput, metadata middleware.Metadata, err error,
) {
	input, ok := in.Parameters.(*UpdateOdbPeeringConnectionInput)
	if !ok {
		return out, metadata, fmt.Errorf("unknown input parameters type %T", in.Parameters)
	}
	if err := validateOpUpdateOdbPeeringConnectionInput(input); err != nil {
		return out, metadata, err
	}
	return next.HandleInitialize(ctx, in)
}

func addOpAcceptMarketplaceRegistrationValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpAcceptMarketplaceRegistration{}, middleware.After)
}

func addOpCreateCloudAutonomousVmClusterValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpCreateCloudAutonomousVmCluster{}, middleware.After)
}

func addOpCreateCloudExadataInfrastructureValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpCreateCloudExadataInfrastructure{}, middleware.After)
}

func addOpCreateCloudVmClusterValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpCreateCloudVmCluster{}, middleware.After)
}

func addOpCreateOdbNetworkValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpCreateOdbNetwork{}, middleware.After)
}

func addOpCreateOdbPeeringConnectionValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpCreateOdbPeeringConnection{}, middleware.After)
}

func addOpDeleteCloudAutonomousVmClusterValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDeleteCloudAutonomousVmCluster{}, middleware.After)
}

func addOpDeleteCloudExadataInfrastructureValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDeleteCloudExadataInfrastructure{}, middleware.After)
}

func addOpDeleteCloudVmClusterValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDeleteCloudVmCluster{}, middleware.After)
}

func addOpDeleteOdbNetworkValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDeleteOdbNetwork{}, middleware.After)
}

func addOpDeleteOdbPeeringConnectionValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpDeleteOdbPeeringConnection{}, middleware.After)
}

func addOpGetCloudAutonomousVmClusterValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetCloudAutonomousVmCluster{}, middleware.After)
}

func addOpGetCloudExadataInfrastructureValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetCloudExadataInfrastructure{}, middleware.After)
}

func addOpGetCloudExadataInfrastructureUnallocatedResourcesValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetCloudExadataInfrastructureUnallocatedResources{}, middleware.After)
}

func addOpGetCloudVmClusterValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetCloudVmCluster{}, middleware.After)
}

func addOpGetDbNodeValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetDbNode{}, middleware.After)
}

func addOpGetDbServerValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetDbServer{}, middleware.After)
}

func addOpGetOdbNetworkValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetOdbNetwork{}, middleware.After)
}

func addOpGetOdbPeeringConnectionValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpGetOdbPeeringConnection{}, middleware.After)
}

func addOpListAutonomousVirtualMachinesValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpListAutonomousVirtualMachines{}, middleware.After)
}

func addOpListDbNodesValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpListDbNodes{}, middleware.After)
}

func addOpListDbServersValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpListDbServers{}, middleware.After)
}

func addOpListSystemVersionsValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpListSystemVersions{}, middleware.After)
}

func addOpListTagsForResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpListTagsForResource{}, middleware.After)
}

func addOpRebootDbNodeValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpRebootDbNode{}, middleware.After)
}

func addOpStartDbNodeValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpStartDbNode{}, middleware.After)
}

func addOpStopDbNodeValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpStopDbNode{}, middleware.After)
}

func addOpTagResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpTagResource{}, middleware.After)
}

func addOpUntagResourceValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpUntagResource{}, middleware.After)
}

func addOpUpdateCloudExadataInfrastructureValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpUpdateCloudExadataInfrastructure{}, middleware.After)
}

func addOpUpdateOdbNetworkValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpUpdateOdbNetwork{}, middleware.After)
}

func addOpUpdateOdbPeeringConnectionValidationMiddleware(stack *middleware.Stack) error {
	return stack.Initialize.Add(&validateOpUpdateOdbPeeringConnection{}, middleware.After)
}

func validateOpAcceptMarketplaceRegistrationInput(v *AcceptMarketplaceRegistrationInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "AcceptMarketplaceRegistrationInput"}
	if v.MarketplaceRegistrationToken == nil {
		invalidParams.Add(smithy.NewErrParamRequired("MarketplaceRegistrationToken"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpCreateCloudAutonomousVmClusterInput(v *CreateCloudAutonomousVmClusterInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "CreateCloudAutonomousVmClusterInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if v.OdbNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbNetworkId"))
	}
	if v.DisplayName == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DisplayName"))
	}
	if v.AutonomousDataStorageSizeInTBs == nil {
		invalidParams.Add(smithy.NewErrParamRequired("AutonomousDataStorageSizeInTBs"))
	}
	if v.CpuCoreCountPerNode == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CpuCoreCountPerNode"))
	}
	if v.MemoryPerOracleComputeUnitInGBs == nil {
		invalidParams.Add(smithy.NewErrParamRequired("MemoryPerOracleComputeUnitInGBs"))
	}
	if v.TotalContainerDatabases == nil {
		invalidParams.Add(smithy.NewErrParamRequired("TotalContainerDatabases"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpCreateCloudExadataInfrastructureInput(v *CreateCloudExadataInfrastructureInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "CreateCloudExadataInfrastructureInput"}
	if v.DisplayName == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DisplayName"))
	}
	if v.Shape == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Shape"))
	}
	if v.ComputeCount == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ComputeCount"))
	}
	if v.StorageCount == nil {
		invalidParams.Add(smithy.NewErrParamRequired("StorageCount"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpCreateCloudVmClusterInput(v *CreateCloudVmClusterInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "CreateCloudVmClusterInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if v.CpuCoreCount == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CpuCoreCount"))
	}
	if v.DisplayName == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DisplayName"))
	}
	if v.GiVersion == nil {
		invalidParams.Add(smithy.NewErrParamRequired("GiVersion"))
	}
	if v.Hostname == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Hostname"))
	}
	if v.SshPublicKeys == nil {
		invalidParams.Add(smithy.NewErrParamRequired("SshPublicKeys"))
	}
	if v.OdbNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbNetworkId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpCreateOdbNetworkInput(v *CreateOdbNetworkInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "CreateOdbNetworkInput"}
	if v.DisplayName == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DisplayName"))
	}
	if v.ClientSubnetCidr == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ClientSubnetCidr"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpCreateOdbPeeringConnectionInput(v *CreateOdbPeeringConnectionInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "CreateOdbPeeringConnectionInput"}
	if v.OdbNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbNetworkId"))
	}
	if v.PeerNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("PeerNetworkId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDeleteCloudAutonomousVmClusterInput(v *DeleteCloudAutonomousVmClusterInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DeleteCloudAutonomousVmClusterInput"}
	if v.CloudAutonomousVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudAutonomousVmClusterId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDeleteCloudExadataInfrastructureInput(v *DeleteCloudExadataInfrastructureInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DeleteCloudExadataInfrastructureInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDeleteCloudVmClusterInput(v *DeleteCloudVmClusterInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DeleteCloudVmClusterInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDeleteOdbNetworkInput(v *DeleteOdbNetworkInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DeleteOdbNetworkInput"}
	if v.OdbNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbNetworkId"))
	}
	if v.DeleteAssociatedResources == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DeleteAssociatedResources"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpDeleteOdbPeeringConnectionInput(v *DeleteOdbPeeringConnectionInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "DeleteOdbPeeringConnectionInput"}
	if v.OdbPeeringConnectionId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbPeeringConnectionId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetCloudAutonomousVmClusterInput(v *GetCloudAutonomousVmClusterInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetCloudAutonomousVmClusterInput"}
	if v.CloudAutonomousVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudAutonomousVmClusterId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetCloudExadataInfrastructureInput(v *GetCloudExadataInfrastructureInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetCloudExadataInfrastructureInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetCloudExadataInfrastructureUnallocatedResourcesInput(v *GetCloudExadataInfrastructureUnallocatedResourcesInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetCloudExadataInfrastructureUnallocatedResourcesInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetCloudVmClusterInput(v *GetCloudVmClusterInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetCloudVmClusterInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetDbNodeInput(v *GetDbNodeInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetDbNodeInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if v.DbNodeId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DbNodeId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetDbServerInput(v *GetDbServerInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetDbServerInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if v.DbServerId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DbServerId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetOdbNetworkInput(v *GetOdbNetworkInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetOdbNetworkInput"}
	if v.OdbNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbNetworkId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpGetOdbPeeringConnectionInput(v *GetOdbPeeringConnectionInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "GetOdbPeeringConnectionInput"}
	if v.OdbPeeringConnectionId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbPeeringConnectionId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpListAutonomousVirtualMachinesInput(v *ListAutonomousVirtualMachinesInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "ListAutonomousVirtualMachinesInput"}
	if v.CloudAutonomousVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudAutonomousVmClusterId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpListDbNodesInput(v *ListDbNodesInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "ListDbNodesInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpListDbServersInput(v *ListDbServersInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "ListDbServersInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpListSystemVersionsInput(v *ListSystemVersionsInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "ListSystemVersionsInput"}
	if v.GiVersion == nil {
		invalidParams.Add(smithy.NewErrParamRequired("GiVersion"))
	}
	if v.Shape == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Shape"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpListTagsForResourceInput(v *ListTagsForResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "ListTagsForResourceInput"}
	if v.ResourceArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceArn"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpRebootDbNodeInput(v *RebootDbNodeInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "RebootDbNodeInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if v.DbNodeId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DbNodeId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpStartDbNodeInput(v *StartDbNodeInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "StartDbNodeInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if v.DbNodeId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DbNodeId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpStopDbNodeInput(v *StopDbNodeInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "StopDbNodeInput"}
	if v.CloudVmClusterId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudVmClusterId"))
	}
	if v.DbNodeId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("DbNodeId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpTagResourceInput(v *TagResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "TagResourceInput"}
	if v.ResourceArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceArn"))
	}
	if v.Tags == nil {
		invalidParams.Add(smithy.NewErrParamRequired("Tags"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpUntagResourceInput(v *UntagResourceInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "UntagResourceInput"}
	if v.ResourceArn == nil {
		invalidParams.Add(smithy.NewErrParamRequired("ResourceArn"))
	}
	if v.TagKeys == nil {
		invalidParams.Add(smithy.NewErrParamRequired("TagKeys"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpUpdateCloudExadataInfrastructureInput(v *UpdateCloudExadataInfrastructureInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "UpdateCloudExadataInfrastructureInput"}
	if v.CloudExadataInfrastructureId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("CloudExadataInfrastructureId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpUpdateOdbNetworkInput(v *UpdateOdbNetworkInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "UpdateOdbNetworkInput"}
	if v.OdbNetworkId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbNetworkId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}

func validateOpUpdateOdbPeeringConnectionInput(v *UpdateOdbPeeringConnectionInput) error {
	if v == nil {
		return nil
	}
	invalidParams := smithy.InvalidParamsError{Context: "UpdateOdbPeeringConnectionInput"}
	if v.OdbPeeringConnectionId == nil {
		invalidParams.Add(smithy.NewErrParamRequired("OdbPeeringConnectionId"))
	}
	if invalidParams.Len() > 0 {
		return invalidParams
	} else {
		return nil
	}
}
