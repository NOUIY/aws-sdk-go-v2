// Code generated by smithy-go-codegen DO NOT EDIT.

package types

import (
	smithydocument "github.com/aws/smithy-go/document"
)

// Defines how telemetry data should be centralized across an Amazon Web Services
// Organization, including source and destination configurations.
type CentralizationRule struct {

	// Configuration determining where the telemetry data should be centralized,
	// backed up, as well as encryption configuration for the primary and backup
	// destinations.
	//
	// This member is required.
	Destination *CentralizationRuleDestination

	// Configuration determining the source of the telemetry data to be centralized.
	//
	// This member is required.
	Source *CentralizationRuleSource

	noSmithyDocumentSerde
}

// Configuration specifying the primary destination for centralized telemetry data.
type CentralizationRuleDestination struct {

	// The primary destination region to which telemetry data should be centralized.
	//
	// This member is required.
	Region *string

	// The destination account (within the organization) to which the telemetry data
	// should be centralized.
	Account *string

	// Log specific configuration for centralization destination log groups.
	DestinationLogsConfiguration *DestinationLogsConfiguration

	noSmithyDocumentSerde
}

// Configuration specifying the source of telemetry data to be centralized.
type CentralizationRuleSource struct {

	// The list of source regions from which telemetry data should be centralized.
	//
	// This member is required.
	Regions []string

	// The organizational scope from which telemetry data should be centralized,
	// specified using organization id, accounts or organizational unit ids.
	Scope *string

	// Log specific configuration for centralization source log groups.
	SourceLogsConfiguration *SourceLogsConfiguration

	noSmithyDocumentSerde
}

// A summary of a centralization rule's key properties and status.
type CentralizationRuleSummary struct {

	// The Amazon Web Services region where the organization centralization rule was
	// created.
	CreatedRegion *string

	// The timestamp when the organization centralization rule was created.
	CreatedTimeStamp *int64

	// The Amazon Web Services Account that created the organization centralization
	// rule.
	CreatorAccountId *string

	// The primary destination account of the organization centralization rule.
	DestinationAccountId *string

	// The primary destination region of the organization centralization rule.
	DestinationRegion *string

	// The reason why an organization centralization rule is marked UNHEALTHY.
	FailureReason CentralizationFailureReason

	// The timestamp when the organization centralization rule was last updated.
	LastUpdateTimeStamp *int64

	// The Amazon Resource Name (ARN) of the organization centralization rule.
	RuleArn *string

	// The health status of the organization centralization rule.
	RuleHealth RuleHealth

	// The name of the organization centralization rule.
	RuleName *string

	noSmithyDocumentSerde
}

// Configuration for centralization destination log groups, including encryption
// and backup settings.
type DestinationLogsConfiguration struct {

	// Configuration defining the backup region and an optional KMS key for the backup
	// destination.
	BackupConfiguration *LogsBackupConfiguration

	// The encryption configuration for centralization destination log groups.
	LogsEncryptionConfiguration *LogsEncryptionConfiguration

	noSmithyDocumentSerde
}

// Configuration for backing up centralized log data to a secondary region.
type LogsBackupConfiguration struct {

	// Logs specific backup destination region within the primary destination account
	// to which log data should be centralized.
	//
	// This member is required.
	Region *string

	// KMS Key arn belonging to the primary destination account and backup region, to
	// encrypt newly created central log groups in the backup destination.
	KmsKeyArn *string

	noSmithyDocumentSerde
}

// Configuration for encrypting centralized log groups. This configuration is only
// applied to destination log groups for which the corresponding source log groups
// are encrypted using Customer Managed KMS Keys.
type LogsEncryptionConfiguration struct {

	// Configuration that determines the encryption strategy of the destination log
	// groups. CUSTOMER_MANAGED uses the configured KmsKeyArn to encrypt newly created
	// destination log groups.
	//
	// This member is required.
	EncryptionStrategy EncryptionStrategy

	// Conflict resolution strategy for centralization if the encryption strategy is
	// set to CUSTOMER_MANAGED and the destination log group is encrypted with an
	// AWS_OWNED KMS Key. ALLOW lets centralization go through while SKIP prevents
	// centralization into the destination log group.
	EncryptionConflictResolutionStrategy EncryptionConflictResolutionStrategy

	// KMS Key arn belonging to the primary destination account and region, to encrypt
	// newly created central log groups in the primary destination.
	KmsKeyArn *string

	noSmithyDocumentSerde
}

// Configuration for selecting and handling source log groups for centralization.
type SourceLogsConfiguration struct {

	// A strategy determining whether to centralize source log groups that are
	// encrypted with customer managed KMS keys (CMK). ALLOW will consider CMK
	// encrypted source log groups for centralization while SKIP will skip CMK
	// encrypted source log groups from centralization.
	//
	// This member is required.
	EncryptedLogGroupStrategy EncryptedLogGroupStrategy

	// The selection criteria that specifies which source log groups to centralize.
	// The selection criteria uses the same format as OAM link filters.
	//
	// This member is required.
	LogGroupSelectionCriteria *string

	noSmithyDocumentSerde
}

//	A model representing the state of a resource within an account according to
//
// telemetry config.
type TelemetryConfiguration struct {

	//  The account ID which contains the resource managed in telemetry configuration.
	// An example of a valid account ID is 012345678901 .
	AccountIdentifier *string

	//  The timestamp of the last change to the telemetry configuration for the
	// resource. For example, 1728679196318 .
	LastUpdateTimeStamp *int64

	//  The identifier of the resource, for example i-0b22a22eec53b9321 .
	ResourceIdentifier *string

	//  Tags associated with the resource, for example { Name: "ExampleInstance",
	// Environment: "Development" } .
	ResourceTags map[string]string

	//  The type of resource, for example Amazon Web Services::EC2::Instance .
	ResourceType ResourceType

	//  The configuration state for the resource, for example { Logs: NotApplicable;
	// Metrics: Enabled; Traces: NotApplicable; } .
	TelemetryConfigurationState map[string]TelemetryState

	noSmithyDocumentSerde
}

//	Configuration specifying where and how telemetry data should be delivered for
//
// Amazon Web Services resources.
type TelemetryDestinationConfiguration struct {

	//  The pattern used to generate the destination path or name, supporting macros
	// like <resourceId> and <accountId>.
	DestinationPattern *string

	//  The type of destination for the telemetry data (e.g., "Amazon CloudWatch
	// Logs", "S3").
	DestinationType DestinationType

	//  The number of days to retain the telemetry data in the destination.
	RetentionInDays *int32

	//  Configuration parameters specific to VPC Flow Logs when VPC is the resource
	// type.
	VPCFlowLogParameters *VPCFlowLogParameters

	noSmithyDocumentSerde
}

//	Defines how telemetry should be configured for specific Amazon Web Services
//
// resources.
type TelemetryRule struct {

	//  The type of telemetry to collect (Logs, Metrics, or Traces).
	//
	// This member is required.
	TelemetryType TelemetryType

	//  Configuration specifying where and how the telemetry data should be delivered.
	DestinationConfiguration *TelemetryDestinationConfiguration

	//  The type of Amazon Web Services resource to configure telemetry for (e.g.,
	// "AWS::EC2::VPC").
	ResourceType ResourceType

	//  The organizational scope to which the rule applies, specified using accounts
	// or organizational units.
	Scope *string

	//  Criteria for selecting which resources the rule applies to, such as resource
	// tags.
	SelectionCriteria *string

	noSmithyDocumentSerde
}

// A summary of a telemetry rule's key properties.
type TelemetryRuleSummary struct {

	//  The timestamp when the telemetry rule was created.
	CreatedTimeStamp *int64

	//  The timestamp when the telemetry rule was last modified.
	LastUpdateTimeStamp *int64

	//  The type of Amazon Web Services resource the rule applies to.
	ResourceType ResourceType

	//  The Amazon Resource Name (ARN) of the telemetry rule.
	RuleArn *string

	//  The name of the telemetry rule.
	RuleName *string

	//  The type of telemetry (Logs, Metrics, or Traces) the rule configures.
	TelemetryType TelemetryType

	noSmithyDocumentSerde
}

// Configuration parameters specific to VPC Flow Logs.
type VPCFlowLogParameters struct {

	//  The format in which VPC Flow Log entries should be logged.
	LogFormat *string

	//  The maximum interval in seconds between the capture of flow log records.
	MaxAggregationInterval *int32

	//  The type of traffic to log (ACCEPT, REJECT, or ALL).
	TrafficType *string

	noSmithyDocumentSerde
}

type noSmithyDocumentSerde = smithydocument.NoSerde
